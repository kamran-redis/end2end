plugins {
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'application'
    id("io.freefair.lombok") version "8.12"
}

repositories {
    mavenLocal()
    mavenCentral()
}

ext {
    flinkVersion = '1.20.0'
    log4jVersion = '2.12.1'
    slf4jVersion = '2.0.16'
    jedisVersion = '5.2.0'
    kryoVersion = '2.24.0'
    objenesisVersion = '2.1'
    kafkaFlinkConnectorVersion = '3.4.0-1.20'
    redisFlinkConnectorVersion = '0.0.3'
    mongoFlinkConnectorVersion = '1.2.0-1.19'

}

configurations {
    flinkShadowJar // dependencies which go into the shadowJar
    // always exclude these (also from transitive dependencies) since they are provided by Flink
    flinkShadowJar.exclude group: 'org.apache.flink', module: 'force-shading'
    flinkShadowJar.exclude group: 'org.apache.flink', module: 'flink-java'
    flinkShadowJar.exclude group: 'org.apache.flink', module: 'flink-core'
    flinkShadowJar.exclude group: 'org.apache.flink', module: 'flink-streaming-java'
    flinkShadowJar.exclude group: 'org.apache.flink', module: 'flink-connector-base'
    flinkShadowJar.exclude group: 'com.google.code.findbugs', module: 'jsr305'
    flinkShadowJar.exclude group: 'com.esotericsoftware.kryo', module: 'kryo'
    flinkShadowJar.exclude group: 'org.objenesis', module: 'objenesis'
    flinkShadowJar.exclude group: 'org.projectlombok', module: 'lombok'
    flinkShadowJar.exclude group: 'org.slf4j'
    flinkShadowJar.exclude group: 'org.apache.logging.log4j'
}

dependencies {
    //flinkShadowJar files('../redis-flink-connector/core/redis-flink-connector/build/libs/redis-flink-connector-plain.jar')
    flinkShadowJar "com.redis:redis-flink-connector:${redisFlinkConnectorVersion}"
    flinkShadowJar "redis.clients:jedis:${jedisVersion}"
    implementation "com.esotericsoftware.kryo:kryo:${kryoVersion}"
    implementation "org.objenesis:objenesis:${objenesisVersion}"
    implementation "org.apache.flink:flink-java:${flinkVersion}"
    implementation "org.apache.flink:flink-streaming-java:${flinkVersion}"
    implementation "org.apache.flink:flink-json:${flinkVersion}"

    implementation "org.apache.flink:flink-connector-base:${flinkVersion}"
    //runtimeOnly "org.apache.logging.log4j:log4j-slf4j-impl:${log4jVersion}"
    //runtimeOnly "org.apache.logging.log4j:log4j-api:${log4jVersion}"
    //runtimeOnly "org.apache.logging.log4j:log4j-core:${log4jVersion}"
    runtimeOnly "org.slf4j:slf4j-simple:${slf4jVersion}"

    //flink connectors
    flinkShadowJar "org.apache.flink:flink-connector-kafka:${kafkaFlinkConnectorVersion}"
    flinkShadowJar "org.apache.flink:flink-connector-mongodb:${mongoFlinkConnectorVersion}"

    // Run in IDE
    runtimeOnly "org.apache.flink:flink-clients:${flinkVersion}"
    runtimeOnly "org.apache.flink:flink-runtime-web:${flinkVersion}"
}

version = '1.0-SNAPSHOT'

// make compileOnly dependencies available for tests:
sourceSets {
    main.compileClasspath += configurations.flinkShadowJar
    main.runtimeClasspath += configurations.flinkShadowJar
    test.compileClasspath += configurations.flinkShadowJar
    test.runtimeClasspath += configurations.flinkShadowJar
    javadoc.classpath += configurations.flinkShadowJar
}

run.classpath = sourceSets.main.runtimeClasspath


shadowJar {
    archiveBaseName.set("${project.name}-all")
    archiveClassifier.set("")
    archiveVersion.set("${version}")

    configurations = [project.configurations.flinkShadowJar]

    manifest {
        attributes 'Main-Class': 'com.redis.end2end.DataGenJob'
    }
}

tasks.named('runShadow') {
    mainClass.set('com.redis.end2end.DataGenJob')
}

project.setProperty("mainClassName", "com.redis.end2end.DataGenJob")

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}